name: Deploy FE to S3 + CloudFront (OIDC)

on:
  push:
    branches: [ "develop" ]   # ← develop에서만 배포
  workflow_dispatch:           # ← 수동 실행 버튼

permissions:
  id-token: write              # ← OIDC 필수
  contents: read

concurrency:
  group: deploy-frontend
  cancel-in-progress: true

env:
  BUILD_DIR: dist                                 # Vite 기본; Next static이면 out 등으로 변경
  AWS_REGION: ${{ vars.AWS_REGION }}
  S3_BUCKET: ${{ vars.S3_BUCKET }}
  CF_DISTRIBUTION_ID: ${{ vars.CF_DISTRIBUTION_ID }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      - run: npm ci
      - run: npm run build

      # 🔐 GitHub OIDC로 AWS 임시 자격 발급
      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::957143340841:role/deefacto-github-assumerole
          aws-region: ${{ env.AWS_REGION }}

      # (선택) 현재 연결 확인
      - run: aws sts get-caller-identity

      # 📦 해시된 정적 자산: 1년 캐시 + immutable
      - name: Sync hashed assets
        run: |
          aws s3 sync "./$BUILD_DIR" "s3://$S3_BUCKET/" \
            --delete \
            --exclude "index.html" \
            --exclude "models/*"  \
            --cache-control "public,max-age=31536000,immutable"

      # 🏠 index.html: 즉시 반영을 위해 no-cache
      - name: Upload index.html (no-cache)
        run: |
          aws s3 cp "./$BUILD_DIR/index.html" "s3://$S3_BUCKET/index.html" \
            --cache-control "no-cache" \
            --content-type "text/html; charset=utf-8"

      # 🚀 CloudFront 캐시 무효화
      - name: Invalidate CloudFront
        run: |
          aws cloudfront create-invalidation \
            --distribution-id "$CF_DISTRIBUTION_ID" \
            --paths "/*"
